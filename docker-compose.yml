version: "2.4"

services:
  localstack:
    image: localstack/localstack:0.14
    ports:
      - 4566:4566
    environment:
      - SERVICES=dynamodb
      - AWS_DEFAULT_REGION=eu-west-1
      - DONT_SEED_POKEMON=false
    healthcheck:
      test: "/wait-localstack.sh -s dynamodb -h localhost:4566 -w 0 -r 1"
    entrypoint: bash -c "apt-get install jq -y; docker-entrypoint.sh"
    volumes:
      - ./deploy/shared/init-localstack.sh:/docker-entrypoint-initaws.d/init-localstack.sh
      - ./deploy/local/enemy-batch-write-items.json:/var/enemy-batch-write-items.json
      - ./deploy/local/partner-batch-write-items.json:/var/partner-batch-write-items.json
      - ./deploy/shared/wait-localstack.sh:/wait-localstack.sh

  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "test1234"
      MYSQL_DATABASE: "db_pokebattle"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    volumes:
      - ./deploy/shared/mysql.sql:/docker-entrypoint-initdb.d/1.sql
      - ./deploy/local/data.sql:/docker-entrypoint-initdb.d/2.sql
    ports:
      - "3307:3306"

  hex_mem:
    build:
      context: .
      dockerfile: ./build/package/server/Dockerfile
    ports:
      - 9185:9186

  hex_ddb:
    build:
      context: .
      dockerfile: build/package/lambda/Dockerfile.local
    depends_on:
      localstack:
        condition: service_healthy
    ports:
      - 9186:9186
    volumes:
      - './cmd/lambda/config.yml:/config.yml'
    environment:
      - AWS_ACCESS_KEY_ID=awslocal
      - AWS_REGION=eu-west-1
      - AWS_SECRET_ACCESS_KEY=awslocal

  hex_mysql:
    build:
      context: .
      dockerfile: build/package/lambda-mysql/Dockerfile.local
    environment:
      SERVER_DEPLOYMENT: "true"
      SQL_DSN: "root:test1234@tcp(mysql:3306)/db_pokebattle"
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 9187:9186
